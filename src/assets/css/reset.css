/**
 * Resets
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/*
 * Remove margins, paddings, and borders from all elements except `<input>` so
 * that everything is on an even playing field.
 */

*:not(input) {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Apply the nicer `border-box` value to make life easier when sizing elements.
 */

html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

/**
 * Main root
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 *
 * 1. Set the font size of the entire document using the default user-agent size
 *    which is typically 16px.
 * 2. Increase the line height from normalize.css's small '1.15' value. The
 *    larger '1.5' value is recommended by the W3C Web Accessibility Initiative.
 */

html {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,
        Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue; /* 1 */
    font-size: 1rem; /* 1 */
    line-height: 1.5; /* 2 */
}

/**
 * Forms
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/*
 * Override normalize.css's opinionated styles, `line-height` is set to
 * 'normal' as that's what most user-agents use.
 * See: https://github.com/necolas/normalize.css/issues/694.
 */

button,
input,
optgroup,
select,
textarea {
    line-height: normal;
}

/*
 * 1. Remove noticeable visual user-agent styles so we have a clean slate.
 * 2. Remove rounded corners that iOS applies to all `<input>` buttons.
 */

[type="submit"],
[type="button"],
[type="reset"],
button {
    background: transparent; /* 1 */
    border: 0; /* 1 */
    border-radius: 0; /* 2 */
    margin: 0; /* 1 */
    padding: 0; /* 1 */
    cursor: pointer;
}

/*
 * 1. Remove top inner shadow that iOS applies to all textual inputs.
 *    ✌︎ Credit
 *    https://davidwalsh.name/input-shadows-ipad
 * 2. Remove padding (mostly 1px) that most user-agents apply to all textual
      inputs.
 */

[type="date"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="search"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"] {
    background-clip: padding-box; /* 1 */
    padding: 0; /* 2 */
}

/*
 * Disable horizontal resizing.
 */

textarea {
    resize: vertical;
}

/**
 * Override a `<fieldset>`s default `min-width: min-content;` with the more
 * standard `min-width: 0;` so it renders as a block element would.
 *
 * ✌︎ Credit
 * https://thatemil.com/blog/2015/01/03/reset-your-fieldset.
 */

fieldset {
    min-width: 0;
}

body:not(:-moz-handler-blocked) fieldset {
    display: table-cell;
}

/**
 * Remove the clear field button (an "X" icon) and the reveal password button
 * (an "eye" icon) that is generated by IE 10+ for textual inputs.
 * See: http://stackoverflow.com/a/21869433/1116204.
 */

::-ms-clear,
::-ms-reveal {
    display: none;
}

/**
 * Un-style the caret for `<select>` lists in IE 10+.
 */

::-ms-expand {
    background-color: transparent;
    border: 0;
}

/**
 * Fixes a bug in Safari Mobile 7.0+ where click events aren't fired on
 * elements that aren't typically interactive.
 * See: https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile.
 */

[role="button"] {
    cursor: pointer;
}

/**
 * Content sectioning
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/**
 * We scope our heading styles to classes instead of the `<hx>` element selector
 * so our styles are not tied to their semantics, i.e., if you want a `<h4>` to
 * look like a `<h2>` you can easily do this. All of the heading elements are
 * reset to have the same styles as the base copy.
 * See: https://medium.com/fed-or-dead/handling-headings-in-a-ui-component-library-2587de93c890
 */

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: normal;
    line-height: inherit;
}

/**
 * Forms
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/*
 * Override normalize.css's opinionated styles, `line-height` is set to
 * 'normal' as that's what most user-agents use.
 * See: https://github.com/necolas/normalize.css/issues/694.
 */

button,
input,
optgroup,
select,
textarea {
    line-height: normal;
}

/*
 * 1. Remove noticeable visual user-agent styles so we have a clean slate.
 * 2. Remove rounded corners that iOS applies to all `<input>` buttons.
 */

[type="submit"],
[type="button"],
[type="reset"],
button {
    background: transparent; /* 1 */
    border: 0; /* 1 */
    border-radius: 0; /* 2 */
    margin: 0; /* 1 */
    padding: 0; /* 1 */
}

/*
 * 1. Remove top inner shadow that iOS applies to all textual inputs.
 *    ✌︎ Credit
 *    https://davidwalsh.name/input-shadows-ipad
 * 2. Remove padding (mostly 1px) that most user-agents apply to all textual
      inputs.
 */

[type="date"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="search"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"] {
    background-clip: padding-box; /* 1 */
    padding: 0; /* 2 */
}

/*
 * Disable horizontal resizing.
 */

textarea {
    resize: vertical;
}

/**
 * Override a `<fieldset>`s default `min-width: min-content;` with the more
 * standard `min-width: 0;` so it renders as a block element would.
 *
 * ✌︎ Credit
 * https://thatemil.com/blog/2015/01/03/reset-your-fieldset.
 */

fieldset {
    min-width: 0;
}

body:not(:-moz-handler-blocked) fieldset {
    display: table-cell;
}

/**
 * Remove the clear field button (an "X" icon) and the reveal password button
 * (an "eye" icon) that is generated by IE 10+ for textual inputs.
 * See: http://stackoverflow.com/a/21869433/1116204.
 */

::-ms-clear,
::-ms-reveal {
    display: none;
}

/**
 * Un-style the caret for `<select>` lists in IE 10+.
 */

::-ms-expand {
    background-color: transparent;
    border: 0;
}

/**
 * Fixes a bug in Safari Mobile 7.0+ where click events aren't fired on
 * elements that aren't typically interactive.
 * See: https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile.
 */

[role="button"] {
    cursor: pointer;
}

/**
 * Text content
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/*
 * In applications lists are ubiquitous and it's extremely rare they're used in
 * long form content therefore it makes sense to strip away their bullets in
 * addition to removing their default margin and padding (see: Resets).
 */

ul,
ol {
    list-style-type: none;
}

/**
 * Image and multimedia
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/**
 * Make all images responsive.
 *
 * 1. Override the height to auto, otherwise images will be stretched when
 *    setting a width and height attribute on the `<img>` element.
 * 2. Set a maximum relative to the parent.
 */

img {
    height: auto; /* [1] */
    max-width: 100%; /* [2] */
}

/**
 * Table content
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/*
 * Prevent table cell borders from doubling up.
 */

table {
    border-collapse: collapse;
}

/**
 * Typography
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/**
 * OpenType features.
 *
 * Due to the poor support of the `font-variant-` properties we have to declare
 * their equivalents via the better supported, but harder to maintain,
 * `font-feature-settings` property. The `font-feature-settings` properties
 * should always come first.
 *
 * ✌︎ Resources and credit
 * http://utility-opentype.kennethormandy.com
 * http://kennethormandy.com/journal/normalize-opentype-css
 * https://helpx.adobe.com/typekit/using/open-type-syntax.html
 * https://practice.typekit.com/lesson/caring-about-opentype-features
 * https://typotheque.com/articles/opentype_features_in_css
 */

/**
 * Main root.
 *
 * Enable kerning, common/standard ligatures, contextual ligatures, and
 * proportional, oldstyle numerals for the entire document.
 *
 * NOTE: if any of the `font-feature-settings` values aren't needed on child
 * elements, e.g.: `<td>`, then you have to explicitly turn them off.
 */

html {
    font-feature-settings: "kern", "liga", "clig", "calt", "onum", "pnum";
    font-kerning: normal;
    font-variant-ligatures: common-ligatures contextual;
    font-variant-numeric: oldstyle-nums proportional-nums;
}

/**
 * Forms.
 */

/**
 * Specific input types, mostly numeric.
 *
 * Remove kerning and proportional, oldstyle numerals.
 * Enable lining numerals.
 */

[type="color"],
[type="date"],
[type="datetime-local"],
[type="month"],
[type="number"],
[type="range"],
[type="tel"],
[type="time"],
[type="week"] {
    font-feature-settings: "kern" 0, "onum" 0, "lnum";
    font-kerning: none;
    font-variant-numeric: lining-nums;
}

/**
 * Inline text semantics.
 */

/**
 * normalize.css normalizes the `<sub>` and `<sup>` elements, however, if
 * user-agents support the `font-variant-position` property then we use that
 * instead and remove the relevant normalize.css styles.
 */

@supports (font-variant-position: sub) and (font-variant-position: super) {
    sub,
    sup {
        font-size: 100%;
        line-height: inherit;
        position: static;
    }

    sub {
        font-variant-position: sub;
    }

    sup {
        font-variant-position: super;
    }
}

/**
 * Remove kerning and common/standard ligatures.
 * Enable lining numerals, tabular numerals, and slashed zero.
 */

code,
kbd,
pre,
samp {
    font-feature-settings: "kern" 0, "liga" 0, "clig" 0, "onum" 0, "pnum" 0,
        "tnum", "lnum", "zero";
    font-kerning: none;
    font-variant-ligatures: contextual;
    font-variant-numeric: lining-nums tabular-nums slashed-zero;
}

/**
 * Table content.
 *
 * Remove proportional and oldstyle numerals.
 * Enable lining numerals, tabular numerals, and slashed zero.
 */

td {
    font-feature-settings: "onum" 0, "pnum" 0, "lnum", "tnum", "zero";
    font-variant-numeric: lining-nums tabular-nums slashed-zero;
}

/**
 * Interactive
 * ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺
 */

/**
 * Indicates that a label will shift focus to its associated control.
 */

label {
    cursor: pointer;
}

/**
 * Prevents an unwanted focus outline from appearing around elements that might
 * still respond to pointer events.
 *
 * NOTE: it's okay to use `!important` here as we're doing it preemptively,
 * i.e., we always want this rule to take precedence.
 */

[tabindex="-1"]:focus {
    outline: none !important;
}

/**
 * Avoid 300ms click delay on touch devices that support the `touch-action` CSS
 * property.
 *
 * ✌︎ Resources and credit
 * http://caniuse.com/#feat=css-touch-action
 * http://patrickhlauke.github.io/touch/tests/results/#suppressing-300ms-delay
 * https://adactio.com/journal/10019
 * https://developers.google.com/web/updates/2013/12/300ms-tap-delay-gone-away
 */

a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex]:not([tabindex="-1"]) {
    touch-action: manipulation;
}
